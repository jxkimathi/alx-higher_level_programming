# 5-text_indentation.txt

================================
How to use 5-text_indentation.py
================================

This module defines a text indentation function ``text_indentation(text)``.

Usage
=====

A newline is printed after the text is ``.``, ``:``, ``?``.

No spaces are printed at the beginning of the line.

::

    >>> text_indentation("   Hello there.")
    Hello there.
    <BLANKLINE>

::

    >>> text_indentation("          ")

No spaces are printed at the end of the line either.

::

    >>> text_indentation("Hello.   ")
    Hello.
    <BLANKLINE>

::

    >>> text_indentation("    Woah now.    This is messy.   ")
    Woah now.
    <BLANKLINE>
    This is messy.
    <BLANKLINE>

Texts not ending with ``.``, ``?``, ``:`` are not printed with a
newline afterwards.

::

    >>> text_indentation("No ending period, what bad grammar")
    No ending period, what bad grammar

Newlines within a string are printed as normal.

::

    >>> text_indentation("Let's print a new-line! Here goes:\nPrinted.")
    Let's print a new-line! Here goes:
    <BLANKLINE>
    <BLANKLINE>
    Printed.
    <BLANKLINE>

::

    >>> text_indentation("\n\n\n We just printed three new lines.")
    <BLANKLINE>
    <BLANKLINE>
    <BLANKLINE>
    We just printed three new lines.
    <BLANKLINE>

::
    >>> text_indentation("A sneaky \n new line.")
    A sneaky
    new line.
    <BLANKLINE>

Invalid Text
============

A TypeErroris raised if ``text`` is not a string.

::

    >>> text_indentation(7)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation({"one": 1, "two": 2})
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string
